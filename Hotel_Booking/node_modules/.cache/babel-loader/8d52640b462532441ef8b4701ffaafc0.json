{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Hotel Manager\\\\Hotel_Booking\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { faCircleXmark, faColonSign } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { SearchContext } from '../../context/SearchContext';\nimport useFetch from '../../hooks/useFetch';\nimport './reserve.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate); // console.log(alldates);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  }; // console.log(selectedRooms)\n\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: roomNumber.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: roomNumber._id,\n            onChange: handleSelect,\n            disabled: !isAvailable(roomNumber)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"NpO2p4ZjkZ5P8YtjNhbWcahypzg=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Hotel Manager/Hotel_Booking/src/components/reserve/Reserve.jsx"],"names":["faCircleXmark","faColonSign","FontAwesomeIcon","useContext","useState","SearchContext","useFetch","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","e","checked","target","value","filter","item","handleClick","map","i","title","desc","maxPeople","price","roomNumbers","number","_id"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,mCAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,eAAP;;AAGA,OAAO,MAAMC,OAAO,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAuB;AAC3C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAK;AAACQ,IAAAA,IAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA0BR,QAAQ,CAAE,gBAAeG,OAAQ,EAAzB,CAAvC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAUZ,UAAU,CAACE,aAAD,CAA1B;;AAEA,QAAMW,eAAe,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AAC5C,UAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASH,SAAT,CAAd;AACA,UAAMI,GAAG,GAAG,IAAID,IAAJ,CAASF,OAAT,CAAZ;AACA,UAAMI,IAAI,GAAG,IAAIF,IAAJ,CAASD,KAAK,CAACI,OAAN,EAAT,CAAb;AAEA,QAAIR,KAAK,GAAG,EAAZ;;AAEA,WAAMO,IAAI,IAAID,GAAd,EAAkB;AACdN,MAAAA,KAAK,CAACS,IAAN,CAAW,IAAIJ,IAAJ,CAASE,IAAT,EAAeC,OAAf,EAAX;AACAD,MAAAA,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACI,OAAL,KAAe,CAA5B;AACH;;AACD,WAAOX,KAAP;AAEH,GAbD;;AAcA,QAAMY,QAAQ,GAAIX,eAAe,CAACD,KAAK,CAAC,CAAD,CAAL,CAASE,SAAV,EAAqBF,KAAK,CAAC,CAAD,CAAL,CAASG,OAA9B,CAAjC,CAnB2C,CAoB3C;;AAEA,QAAMU,WAAW,GAAIC,UAAD,IAAgB;AAChC,UAAMC,OAAO,GAAGD,UAAU,CAACE,gBAAX,CAA4BC,IAA5B,CAAiCV,IAAI,IAAIK,QAAQ,CAACM,QAAT,CAAkB,IAAIb,IAAJ,CAASE,IAAT,EAAeC,OAAf,EAAlB,CAAzC,CAAhB;AACA,WAAO,CAACO,OAAR;AACH,GAHD;;AAMA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASD,OAAzB;AACA,UAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACA3B,IAAAA,gBAAgB,CACZyB,OAAO,GAAG,CAAC,GAAG1B,aAAJ,EAAmB4B,KAAnB,CAAH,GACP5B,aAAa,CAAC6B,MAAd,CAAsBC,IAAD,IAASA,IAAI,KAAKF,KAAvC,CAFY,CAAhB;AAKH,GARD,CA5B2C,CAqC3C;;;AAEA,QAAMG,WAAW,GAAE,MAAM,CAExB,CAFD;;AAGF,sBACE;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,eAAD;AACA,QAAA,IAAI,EAAEzC,aADN;AAEA,QAAA,SAAS,EAAC,QAFV;AAGA,QAAA,OAAO,EAAE,MAAMQ,OAAO,CAAC,KAAD;AAHtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOKI,IAAI,CAAC8B,GAAL,CAAS,CAACF,IAAD,EAAOG,CAAP,kBACN;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,sBAAyBH,IAAI,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBJ,IAAI,CAACK;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oDACgB;AAAA,wBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,oBADhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAMI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,sBAAyBN,IAAI,CAACO;AAA9B;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA,WAAkCJ,CAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,EASKH,IAAI,CAACQ,WAAL,CAAiBN,GAAjB,CAAsBb,UAAD,iBAClB;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAA,sBAAQA,UAAU,CAACoB;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,UAAZ;AACA,YAAA,KAAK,EAAEpB,UAAU,CAACqB,GADlB;AAEA,YAAA,QAAQ,EAAEhB,YAFV;AAGA,YAAA,QAAQ,EAAE,CAACN,WAAW,CAACC,UAAD;AAHtB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CAPL,eA8BK;AAAQ,QAAA,OAAO,EAAEY,WAAjB;AAA8B,QAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA9EM;;GAAMlC,O;UAEsBD,Q;;;KAFtBC,O","sourcesContent":["import { faCircleXmark, faColonSign } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { SearchContext } from '../../context/SearchContext';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport './reserve.css'\r\n\r\n\r\nexport const Reserve = ({setOpen, hotelId}) => {\r\n    const [selectedRooms, setSelectedRooms] = useState([]);\r\n    const{data,  loading, error} = useFetch(`/hotels/room/${hotelId}`)\r\n    const {dates} = useContext(SearchContext)\r\n\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate)\r\n        const end = new Date(endDate)\r\n        const date = new Date(start.getTime());\r\n\r\n        let dates = []\r\n\r\n        while(date <= end){\r\n            dates.push(new Date(date).getTime());\r\n            date.setDate(date.getDate()+1)\r\n        }\r\n        return dates; \r\n        \r\n    };\r\n    const alldates = (getDatesInRange(dates[0].startDate, dates[0].endDate));\r\n    // console.log(alldates);\r\n\r\n    const isAvailable = (roomNumber) => {\r\n        const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\r\n        return !isFound\r\n    }\r\n\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked;\r\n        const value = e.target.value;\r\n        setSelectedRooms(\r\n            checked ? [...selectedRooms, value] :\r\n            selectedRooms.filter((item)=> item !== value)\r\n        );\r\n        \r\n    };\r\n    // console.log(selectedRooms)\r\n\r\n    const handleClick =() => {\r\n\r\n    }\r\n  return (\r\n    <div className = \"reserve\">\r\n        <div className=\"rContainer\">\r\n            <FontAwesomeIcon \r\n            icon={faCircleXmark} \r\n            className=\"rClose\"\r\n            onClick={() => setOpen(false)}\r\n            />\r\n            <span>Select your rooms:</span>\r\n            {data.map((item, i) => (\r\n                <div className='rItem' >\r\n                    <div className=\"rItemInfo\" key = {i}>\r\n                        <div className=\"rTitle\">{item.title}</div>\r\n                        <div className=\"rDesc\">{item.desc}</div>\r\n                        <div className=\"rMax\">\r\n                            Max People: <b>{item.maxPeople}</b>\r\n                        </div>\r\n                        <div className=\"rPrice\">{item.price}</div>\r\n                    </div>\r\n                    {item.roomNumbers.map((roomNumber) => (\r\n                        <div className='room'>\r\n                            <label>{roomNumber.number}</label>\r\n                            <input type=\"checkbox\" \r\n                            value={roomNumber._id}\r\n                            onChange={handleSelect}\r\n                            disabled={!isAvailable(roomNumber)}/>\r\n                        </div>\r\n                    ))}\r\n                   \r\n                </div>\r\n\r\n            ))}\r\n             <button onClick={handleClick} className=\"rButton\">Reserve Now!</button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}