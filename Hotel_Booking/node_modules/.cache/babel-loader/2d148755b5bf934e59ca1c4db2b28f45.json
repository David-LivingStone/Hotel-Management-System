{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Hotel Manager\\\\Hotel_Booking\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { faCircleXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState } from 'react';\nimport useFetch from '../../hooks/useFetch';\nimport './reserve.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`); // const handleSelect = (e) => {\n  //     const selected = e.target.checked;\n  //     const value = e.target.value;\n  //     setSelectedRooms(\n  //         checked ? [...selectedRooms, value] :\n  //         selectedRooms.filter((item) => item !== value)\n  //     );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ClassName: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rclose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: roomNumber.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"select\",\n            value: roomNumber._id,\n            onClick: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"xe6doeox8QF/XGktExWHcUe+6To=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Hotel Manager/Hotel_Booking/src/components/reserve/Reserve.jsx"],"names":["faCircleXmark","FontAwesomeIcon","useState","useFetch","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","map","item","title","desc","maxPeople","price","roomNumbers","roomNumber","number","_id","handleSelect"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,mCAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,eAAP;;AAGA,OAAO,MAAMC,OAAO,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAuB;AAC3C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAK;AAACO,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAeC,IAAAA;AAAf,MAAwBR,QAAQ,CAAE,gBAAeG,OAAQ,EAAzB,CAArC,CAF2C,CAI3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACF,sBACE;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,eAAD;AACA,QAAA,IAAI,EAAEN,aADN;AAEA,QAAA,SAAS,EAAC,QAFV;AAGA,QAAA,OAAO,EAAE,MAAMK,OAAO,CAAC,KAAD;AAHtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOKI,IAAI,CAACG,GAAL,CAAUC,IAAD,iBACN;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,sBAAyBA,IAAI,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBD,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oDACgB;AAAA,wBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBADhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAMI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,sBAAyBH,IAAI,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EASKJ,IAAI,CAACK,WAAL,CAAiBN,GAAjB,CAAsBO,UAAD,iBAClB;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAA,sBAAQA,UAAU,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAED,UAAU,CAACE,GAAvC;AAA4C,YAAA,OAAO,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA7CM;;GAAMlB,O;UAEoBD,Q;;;KAFpBC,O","sourcesContent":["import { faCircleXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport './reserve.css'\r\n\r\n\r\nexport const Reserve = ({setOpen, hotelId}) => {\r\n    const [selectedRooms, setSelectedRooms] = useState([]);\r\n    const{data,loading, error} = useFetch(`/hotels/room/${hotelId}`)\r\n\r\n    // const handleSelect = (e) => {\r\n    //     const selected = e.target.checked;\r\n    //     const value = e.target.value;\r\n    //     setSelectedRooms(\r\n    //         checked ? [...selectedRooms, value] :\r\n    //         selectedRooms.filter((item) => item !== value)\r\n    //     );\r\n    // };\r\n  return (\r\n    <div ClassName = \"reserve\">\r\n        <div className=\"rcontainer\">\r\n            <FontAwesomeIcon \r\n            icon={faCircleXmark} \r\n            className=\"rclose\"\r\n            onClick={() => setOpen(false)}\r\n            />\r\n            <span>Select your rooms:</span>\r\n            {data.map((item) => (\r\n                <div className='rItem'>\r\n                    <div className=\"rItemInfo\">\r\n                        <div className=\"rTitle\">{item.title}</div>\r\n                        <div className=\"rDesc\">{item.desc}</div>\r\n                        <div className=\"rMax\">\r\n                            Max People: <b>{item.maxPeople}</b>\r\n                        </div>\r\n                        <div className=\"rPrice\">{item.price}</div>\r\n                    </div>\r\n                    {item.roomNumbers.map((roomNumber) => (\r\n                        <div className='room'>\r\n                            <label>{roomNumber.number}</label>\r\n                            <input type=\"select\" value={roomNumber._id} onClick={handleSelect}/>\r\n                        </div>\r\n                    ))}\r\n                \r\n                </div>\r\n\r\n            ))}\r\n             \r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}